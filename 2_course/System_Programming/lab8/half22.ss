#lang racket
;half22 for 208
(define (root a b)
 (define temp 0)
 (set! temp (half-interval a b (f a)(f b)))
  (display"Total number of iteranions=")
  (display total-iterations)(newline)
 (display"[")
 (display a)
 (display" , ")
 (display b)
 (display"]")
      temp 
)
(define (half-interval a b fa fb)
 (define root 0)
 (set! total-iterations 0)
   (set! root(cond((and(< fa 0)(< 0 fb))
                 (try a b))
         (else(cond((and(< 0 fa)(< fb 0))
                 (try b a))
         (else(+ b 1)))))
    )
  (newline)
  root
) 
(define(try neg-point pos-point)
 (define midpoint 0)
 (define test-value 0)
     (set! midpoint (average neg-point pos-point))
     (cond((close-enough? neg-point pos-point) midpoint)
          (else (let() (set! test-value (f midpoint))
               (display "+")
               (set! total-iterations (+ total-iterations 1))
               (cond((< 0 test-value)(try neg-point midpoint))
                    (else(cond((< test-value 0)(try midpoint pos-point))
                    (else midpoint)))
          )))
      )
)
(define (close-enough? x y)
  (<(abs (- x y))tolerance))
(define (average x y)(*(+ x y)(/ (* 0.02e2))))

(define tolerance 0.00001e2) 
(define total-iterations 0)
(define(f z)
  (+ (exp (- z))
    (sin z)
    0.075e1)
)
 (display"Variant 208-09\n")
;      a b
 (root 0.472e1 6)
 (display"(c) Kirill Kashirin 2022\n")